name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Upgrade Compiler
      run: sudo apt install -y software-properties-common && sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt install -y g++-9 && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
      if: matrix.os == 'ubuntu-latest'
      
    - name: Install conan package manager
      run: sudo pip install conan
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'

    - name: Install conan package manager
      run: pip install conan
      if: matrix.os == 'windows-latest'
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DEXPRESSCPP_USE_CONAN_DEPENDENCIES=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    # TODO: add tests to the pipeline
    # - name: Test
    #   working-directory: ${{runner.workspace}}/build
    #   shell: bash
    #   # Execute tests defined by the CMake configuration.  
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: make tests && ./tests
